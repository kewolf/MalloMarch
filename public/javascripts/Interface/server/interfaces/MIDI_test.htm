<html>
<head>
    <script src='interface.js'></script>
</head>
<body>
<script>
    // NOTE: the MIDI output virtual port will be named "Interface Out". Select this as an input in programs accepting MIDI data
    // and you should receive signals from this interface. See the README in ther server folder for more information.

    // IMPORTANT: MAKE SURE YOU LIMIT THE OUTPUT RANGE OF NOTE AND CC MESSAGES TO BE BETWEEN 0 AND 127 using the min and max properties.

    // You can manually send MIDI messages with the following syntax:
    // Interface.MIDI.send('noteon', 0, 64, 127);

    panel = new Interface.Panel({useRelativeSizesAndPositions: true});

    // send a noteon message on channel 1 (they are zero-indexed in JavaScript) for note number 64.
    a = new Interface.Button({
        bounds: [0, 0, 1, .5],
        min: 0, max: 127, // limit range to 0..127 for MIDI
        mode: 'contact',
        target: "MIDI", key: ['noteon', 0, 64],
    })

    // send a cc message on channel 1 (they are zero-indexed in JavaScript) for cc number 64 using the value of the slider
    b = new Interface.Slider({
        bounds: [0, .5, 1, .5],
        min: 0, max: 127, // limit range to 0..127 for MIDI
        isVertical: false,
        target: "MIDI", key: ['cc', 0, 64],
    })
    panel.add(a, b);

</script>
</body>
</html>